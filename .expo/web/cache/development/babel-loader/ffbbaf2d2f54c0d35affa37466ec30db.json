{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/softrefine/Jay Valani/JV/repo shop/shop-app/screens/shop/CartScreen.js\";\n\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Colors from \"../../constants/Colors\";\nimport CardItem from \"../../components/shop/CardItem\";\nimport * as cartActions from \"../../store/actions/cart\";\n\nvar CartScreen = function CartScreen(props) {\n  var cartTotalAmount = useSelector(function (state) {\n    return state.cart.totalAmount;\n  });\n  var cartItems = useSelector(function (state) {\n    var transformedCartItems = [];\n\n    for (var key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum\n      });\n    }\n\n    return transformedCartItems.sort(function (a, b) {\n      return a.productId > b.productId ? 1 : -1;\n    });\n  });\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.summary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.summaryText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Total: \", React.createElement(Text, {\n    style: styles.amount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 57\n    }\n  }, \"$\", cartTotalAmount.toFixed(2))), React.createElement(Button, {\n    title: \"Order Now\",\n    color: Colors.accent,\n    disabled: cartItems.length === 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), React.createElement(FlatList, {\n    data: cartItems,\n    keyExtractor: function keyExtractor(item) {\n      return item.productId;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(CardItem, {\n        quantity: itemData.item.quantity,\n        title: itemData.item.productTitle,\n        amount: itemData.item.sum,\n        onRemove: function onRemove() {\n          dispatch(cartActions.removeFromCart(itemData.item.productId));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor: \"#FFFFFF\",\n    margin: 20\n  },\n  summary: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 20,\n    padding: 10,\n    shadowColor: \"black\",\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    elevation: 13,\n    borderRadius: 13,\n    backgroundColor: \"white\"\n  },\n  summaryText: {\n    fontFamily: \"sofiaBold\",\n    fontSize: 18\n  },\n  amount: {\n    color: Colors.primary\n  },\n  cart: {\n    fontFamily: \"sofiaBold\",\n    fontSize: 18\n  }\n});\nexport default CartScreen;","map":{"version":3,"sources":["/home/softrefine/Jay Valani/JV/repo shop/shop-app/screens/shop/CartScreen.js"],"names":["React","useSelector","useDispatch","Colors","CardItem","cartActions","CartScreen","props","cartTotalAmount","state","cart","totalAmount","cartItems","transformedCartItems","key","items","push","productId","productTitle","productPrice","quantity","sum","sort","a","b","dispatch","styles","screen","summary","summaryText","amount","toFixed","accent","length","item","itemData","removeFromCart","StyleSheet","create","flex","backgroundColor","margin","flexDirection","alignItems","justifyContent","marginBottom","padding","shadowColor","shadowOpacity","shadowOffset","width","height","elevation","borderRadius","fontFamily","fontSize","color","primary"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FlatList, View, Text, Button, StyleSheet } from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Colors from \"../../constants/Colors\";\nimport CardItem from \"../../components/shop/CardItem\";\nimport * as cartActions from \"../../store/actions/cart\";\n\n\nconst CartScreen = props => {\n    const cartTotalAmount = useSelector(state => state.cart.totalAmount);\n    const cartItems = useSelector(state => {\n        const transformedCartItems = [];\n        for (const key in state.cart.items) {\n            transformedCartItems.push({\n                productId: key,\n                productTitle: state.cart.items[key].productTitle,\n                productPrice: state.cart.items[key].productPrice,\n                quantity: state.cart.items[key].quantity,\n                sum: state.cart.items[key].sum,\n            })\n        }\n        return transformedCartItems.sort((a, b) =>\n            a.productId > b.productId ? 1 : -1\n        );\n        // return;\n    });\n\n    const dispatch = useDispatch();\n\n    return (\n        <View style={styles.screen}>\n            <View style={styles.summary}>\n                <Text style={styles.summaryText}>Total: <Text style={styles.amount}>${cartTotalAmount.toFixed(2)}</Text></Text>\n                <Button\n                    title=\"Order Now\"\n                    color={Colors.accent}\n                    disabled={cartItems.length === 0}\n                />\n            </View>\n            <FlatList\n                data={cartItems}\n                keyExtractor={item => item.productId}\n                renderItem={itemData =>\n                    <CardItem\n                        quantity={itemData.item.quantity}\n                        title={itemData.item.productTitle}\n                        amount={itemData.item.sum}\n                        onRemove={() => {\n                            dispatch(cartActions.removeFromCart(itemData.item.productId))\n                        }}\n                    />}\n            />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        backgroundColor: \"#FFFFFF\",\n        margin: 20,\n    },\n    summary: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginBottom: 20,\n        padding: 10,\n        shadowColor: \"black\",\n        shadowOpacity: 0.26,\n        shadowOffset: { width: 0, height: 2 },\n        elevation: 13,\n        borderRadius: 13,\n        backgroundColor: \"white\",\n    },\n    summaryText: {\n        fontFamily: \"sofiaBold\",\n        fontSize: 18,\n    },\n    amount: {\n        color: Colors.primary,\n    },\n    cart: {\n        fontFamily: \"sofiaBold\",\n        fontSize: 18,\n    }\n\n});\n\nexport default CartScreen;"]},"metadata":{},"sourceType":"module"}