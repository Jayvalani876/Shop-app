{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/softrefine/Jay Valani/JV/repo shop/shop-app/screens/shop/ProductDetailScreen.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as cartActions from \"../../store/actions/cart\";\nimport Colors from \"../../constants/Colors\";\n\nvar ProductDetailScreen = function ProductDetailScreen(props) {\n  var productId = props.route.params.productId;\n  var selectedProduct = useSelector(function (state) {\n    return state.products.availableProducts.find(function (prod) {\n      return prod.id === productId;\n    });\n  });\n  var dispatch = useDispatch();\n  return React.createElement(ScrollView, {\n    style: {\n      backgroundColor: \"#FFFFFF\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: selectedProduct.imageUrl\n    },\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Add to Cart\",\n    color: Colors.primary,\n    onPress: function onPress() {\n      dispatch(cartActions.addtocart(selectedProduct));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: styles.price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"$\", selectedProduct.price.toFixed(2)), React.createElement(Text, {\n    style: styles.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, selectedProduct.description));\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    width: \"100%\",\n    height: 300\n  },\n  button: {\n    padding: 40,\n    paddingHorizontal: 50\n  },\n  price: {\n    fontSize: 20,\n    color: \"#888\",\n    textAlign: \"center\",\n    marginVertical: 20,\n    fontFamily: \"sofiaMedium\"\n  },\n  description: {\n    fontSize: 17,\n    textAlign: \"center\",\n    marginHorizontal: 20,\n    fontFamily: \"sofiaMedium\"\n  }\n});\nexport default ProductDetailScreen;","map":{"version":3,"sources":["/home/softrefine/Jay Valani/JV/repo shop/shop-app/screens/shop/ProductDetailScreen.js"],"names":["React","useSelector","useDispatch","cartActions","Colors","ProductDetailScreen","props","productId","route","params","selectedProduct","state","products","availableProducts","find","prod","id","dispatch","backgroundColor","uri","imageUrl","styles","image","button","primary","addtocart","price","toFixed","description","StyleSheet","create","width","height","padding","paddingHorizontal","fontSize","color","textAlign","marginVertical","fontFamily","marginHorizontal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAO,KAAKC,WAAZ;AACA,OAAOC,MAAP;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,KAAK,EAAI;AAEjC,MAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,SAArC;AACA,MAAMG,eAAe,GAAGT,WAAW,CAC/B,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAN,CAAeC,iBAAf,CAAiCC,IAAjC,CAAsC,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,KAAYT,SAAhB;AAAA,KAA1C,CAAJ;AAAA,GAD0B,CAAnC;AAGA,MAAMU,QAAQ,GAAGf,WAAW,EAA5B;AAEA,SACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEgB,MAAAA,eAAe,EAAE;AAAnB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAET,eAAe,CAACU;AAAvB,KAAf;AAAkD,IAAA,KAAK,EAAEC,MAAM,CAACC,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,KAAK,EAAEnB,MAAM,CAACoB,OAFlB;AAGI,IAAA,OAAO,EAAE,mBAAM;AAAEP,MAAAA,QAAQ,CAACd,WAAW,CAACsB,SAAZ,CAAsBf,eAAtB,CAAD,CAAR;AAAkD,KAHvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6BhB,eAAe,CAACgB,KAAhB,CAAsBC,OAAtB,CAA8B,CAA9B,CAA7B,CATJ,EAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkClB,eAAe,CAACkB,WAAlD,CAVJ,CADJ;AAcH,CAtBD;;AAwBA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,KAAK,EAAE;AACHS,IAAAA,KAAK,EAAE,MADJ;AAEHC,IAAAA,MAAM,EAAE;AAFL,GADsB;AAK7BT,EAAAA,MAAM,EAAE;AACJU,IAAAA,OAAO,EAAE,EADL;AAEJC,IAAAA,iBAAiB,EAAE;AAFf,GALqB;AAS7BR,EAAAA,KAAK,EAAE;AACHS,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,KAAK,EAAE,MAFJ;AAGHC,IAAAA,SAAS,EAAE,QAHR;AAIHC,IAAAA,cAAc,EAAE,EAJb;AAKHC,IAAAA,UAAU,EAAE;AALT,GATsB;AAgB7BX,EAAAA,WAAW,EAAE;AACTO,IAAAA,QAAQ,EAAE,EADD;AAETE,IAAAA,SAAS,EAAE,QAFF;AAGTG,IAAAA,gBAAgB,EAAE,EAHT;AAITD,IAAAA,UAAU,EAAE;AAJH;AAhBgB,CAAlB,CAAf;AAwBA,eAAelC,mBAAf","sourcesContent":["import React from \"react\";\nimport { View, ScrollView, Text, Image, Button, StyleSheet } from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport * as cartActions from \"../../store/actions/cart\";\nimport Colors from \"../../constants/Colors\";\n\nconst ProductDetailScreen = props => {\n\n    const productId = props.route.params.productId;\n    const selectedProduct = useSelector(\n        state => state.products.availableProducts.find(prod => prod.id === productId)\n    )\n    const dispatch = useDispatch();\n\n    return (\n        <ScrollView style={{ backgroundColor: \"#FFFFFF\" }}>\n            <Image source={{ uri: selectedProduct.imageUrl }} style={styles.image} />\n            <View style={styles.button}>\n                <Button\n                    title=\"Add to Cart\"\n                    color={Colors.primary}\n                    onPress={() => { dispatch(cartActions.addtocart(selectedProduct)) }}\n                />\n            </View>\n            <Text style={styles.price}>${selectedProduct.price.toFixed(2)}</Text>\n            <Text style={styles.description}>{selectedProduct.description}</Text>\n        </ScrollView>\n    )\n};\n\nconst styles = StyleSheet.create({\n    image: {\n        width: \"100%\",\n        height: 300\n    },\n    button: {\n        padding: 40,\n        paddingHorizontal: 50,\n    },\n    price: {\n        fontSize: 20,\n        color: \"#888\",\n        textAlign: \"center\",\n        marginVertical: 20,\n        fontFamily: \"sofiaMedium\"\n    },\n    description: {\n        fontSize: 17,\n        textAlign: \"center\",\n        marginHorizontal: 20,\n        fontFamily: \"sofiaMedium\"\n    }\n});\n\nexport default ProductDetailScreen;"]},"metadata":{},"sourceType":"module"}